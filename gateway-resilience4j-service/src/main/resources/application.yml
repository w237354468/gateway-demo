server:
  port: 8040
spring:
  application:
    name: gateway-resilience4j-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      default-filters:
        - CircuitBreaker
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
#        - id: provider
#          uri: lb://provider-service
#          predicates:
#            - Path=/echo/** # 路由的前缀 这里一般只配置一个
#          filters:
#            - name: RequestRateLimiter
#              args:
                # 令牌桶每秒填充平均速率, 允许用户每秒处理多少个请求。
#                redis-rate-limiter.replenishRate: 1
                # 令牌桶的容量，允许在1s内完成的最大请求数。
#                redis-rate-limiter.burstCapacity: 2
                # 使用SpEL表达式从Spring容器中获取Bean对象, 查看RateLimiteConfig实现类中的方法名
#                key-resolver: '#{@pathKeyResolver}'
#                key-resolver: '#{@ipKeyResolver}'
                #key-resolver: "#{@userKeyResolver}"
  redis:
    host: localhost
    port: 6379
#          filters: # 过滤器 内置了不少通用的过滤器 如以下的重写path的过滤器
#            - RewritePath=/business(?<segment>.*), /api$\{segment}
